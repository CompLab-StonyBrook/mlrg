<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>MLRG</title><link href="https://complab-stonybrook.github.io/mlrg/" rel="alternate"></link><link href="https://complab-stonybrook.github.io/mlrg/feeds/all.atom.xml" rel="self"></link><id>https://complab-stonybrook.github.io/mlrg/</id><updated>2025-03-05T11:31:15-05:00</updated><entry><title>Kenneth on mixed-relation TSL (03/07)</title><link href="https://complab-stonybrook.github.io/mlrg/news/2025-spring/kenneth-on-mixed-relation-tsl-0307.html" rel="alternate"></link><published>2025-03-05T00:00:00-05:00</published><updated>2025-03-05T11:31:15-05:00</updated><author><name>Anton Hampe</name></author><id>tag:complab-stonybrook.github.io,2025-03-05:/mlrg/news/2025-spring/kenneth-on-mixed-relation-tsl-0307.html</id><summary type="html">&lt;p&gt;For the first session, Kenneth will be talking about mixed-relation TSL.&lt;/p&gt;
&lt;p&gt;String TSL involves relativizing the precedence relation to a tier of salient elements. 
For trees, there are more choices: we can relativize dominance and precedence (Graf 2022) as well as derived relations such as d-command (Graf and Shafiei 2019 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For the first session, Kenneth will be talking about mixed-relation TSL.&lt;/p&gt;
&lt;p&gt;String TSL involves relativizing the precedence relation to a tier of salient elements. 
For trees, there are more choices: we can relativize dominance and precedence (Graf 2022) as well as derived relations such as d-command (Graf and Shafiei 2019). 
Going even further, we can construct constraints which make simultaneous reference to multiple relations, but which are otherwise no more complex than the familiar SL/SP/TSL (Rogers and Lambert 2019). 
Today, I want to explore some potentially useful application of these techniques: &lt;/p&gt;
&lt;p&gt;1) combine relativized dominance and command to model case dependencies, &lt;/p&gt;
&lt;p&gt;and 2) define new command relations that take movement into account, allowing for a proper TSL treatment of NPI-licensing and Binding Principle A.&lt;/p&gt;</content><category term="2025-Spring"></category></entry><entry><title>Anton on string equations, compactness and learning (02/28)</title><link href="https://complab-stonybrook.github.io/mlrg/news/2025-spring/anton-on-string-equations-compactness-and-learning-0228.html" rel="alternate"></link><published>2025-02-24T00:00:00-05:00</published><updated>2025-02-25T01:12:15-05:00</updated><author><name>Anton Hampe</name></author><id>tag:complab-stonybrook.github.io,2025-02-24:/mlrg/news/2025-spring/anton-on-string-equations-compactness-and-learning-0228.html</id><summary type="html">&lt;p&gt;For the first session, Anton will be revisiting &lt;a href="https://complab-stonybrook.github.io/mlrg/news/2024-fall/jeff-on-learning-transducers-0920.html"&gt;Jeff's session on equational learning&lt;/a&gt; from last semester.&lt;/p&gt;
&lt;p&gt;Jeff pointed out two challenges with this new approach to learning transductions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;finding a method to identify characteristic samples which is independent of the class of transductions to be learned&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;finding a computationally tractable …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;For the first session, Anton will be revisiting &lt;a href="https://complab-stonybrook.github.io/mlrg/news/2024-fall/jeff-on-learning-transducers-0920.html"&gt;Jeff's session on equational learning&lt;/a&gt; from last semester.&lt;/p&gt;
&lt;p&gt;Jeff pointed out two challenges with this new approach to learning transductions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;finding a method to identify characteristic samples which is independent of the class of transductions to be learned&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;finding a computationally tractable algorithm for solving equations&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this session we will learn about results from two subfields of computer science that offer solutions to these challenges.&lt;/p&gt;
&lt;p&gt;The first challenge can be tackled by realizing that the set of possible left-hand sides for such a system of equations will always be a regular (even local) language.
This lets us exploit a property of languages called &lt;a href="https://scholar.google.com/scholar?cluster=17932744912598753020&amp;amp;hl=de&amp;amp;as_sdt=0,5"&gt;compactness&lt;/a&gt; which says that any language has a finite subset which differentiates the same string morphisms as the whole language. 
In the case of regular languages there is an &lt;a href="https://scholar.google.com/scholar?cluster=8987949344652779872&amp;amp;hl=de&amp;amp;as_sdt=0,5"&gt;efficient algorithm&lt;/a&gt; for constructing such sets.&lt;/p&gt;
&lt;p&gt;The second challenge is rooted in the fact that the problem of solving a single such equation is already NP-complete.
The solution lies in identifying what exactly makes the hard cases hard. 
The field of parametrized complexity is all about finding additional parameters for problems which are intractable when only the size of the input is considered. 
A problem is fixed-parameter tractable when fixing such additional parameters results in a tractable problem with respect to input size. 
There are two types of parametrizations that are particularly promising for our problem: one based in &lt;a href="https://scholar.google.com/scholar?cluster=8302488406971799490&amp;amp;hl=de&amp;amp;as_sdt=0,5"&gt;structure&lt;/a&gt; and one in &lt;a href="https://scholar.google.com/scholar?cluster=16324329046130129306&amp;amp;hl=de&amp;amp;as_sdt=0,5"&gt;bounding output delay/epenthesis&lt;/a&gt;. 
Another handy fact is that we can collapse our systems of equations into single equations with a polynomial blow up in size using some &lt;a href="https://scholar.google.com/scholar?cluster=3610505661209871121&amp;amp;hl=de&amp;amp;as_sdt=0,5"&gt;tricks&lt;/a&gt;.&lt;/p&gt;</content><category term="2025-Spring"></category></entry><entry><title>All good things come to an end (12/06)</title><link href="https://complab-stonybrook.github.io/mlrg/news/2024-fall/all-good-things-come-to-an-end-1206.html" rel="alternate"></link><published>2024-12-04T00:00:00-05:00</published><updated>2024-12-04T14:08:17-05:00</updated><author><name>Anton Hampe</name></author><id>tag:complab-stonybrook.github.io,2024-12-04:/mlrg/news/2024-fall/all-good-things-come-to-an-end-1206.html</id><content type="html">&lt;p&gt;There is no presentation this Friday. Instead there will be time to reflect on the past semester of MLRG, chat about the upcoming break and play the TAG card game that Thomas will be bringing. Hope to see you all there!  &lt;/p&gt;</content><category term="2024-Fall"></category></entry><entry><title>Abed on transformers and formal languages (11/08)</title><link href="https://complab-stonybrook.github.io/mlrg/news/2024-fall/abed-on-transformers-and-formal-languages-1108.html" rel="alternate"></link><published>2024-11-08T00:00:00-05:00</published><updated>2024-11-08T12:43:16-05:00</updated><author><name>Anton Hampe</name></author><id>tag:complab-stonybrook.github.io,2024-11-08:/mlrg/news/2024-fall/abed-on-transformers-and-formal-languages-1108.html</id><content type="html">&lt;p&gt;Investing language models from a FLT perspective has become a popular avenue of research.
Abed will present a review paper that touches on different modeling architectures, circuit complexity and much more!&lt;/p&gt;</content><category term="2024-Fall"></category></entry><entry><title>Thomas on discrete infinity (10/24)</title><link href="https://complab-stonybrook.github.io/mlrg/news/2024-fall/thomas-on-discrete-infinity-1024.html" rel="alternate"></link><published>2024-10-23T00:00:00-04:00</published><updated>2024-10-24T10:08:07-04:00</updated><author><name>Anton Hampe</name></author><id>tag:complab-stonybrook.github.io,2024-10-23:/mlrg/news/2024-fall/thomas-on-discrete-infinity-1024.html</id><summary type="html">&lt;p&gt;The Discrete Infinity Argument is a central pillar of generative grammar. It posits that every natural language is an infinite set of finite structures. The argument rests on the observation that natural languages allow patterns such as (I know that you know that)+ John snores. I will contend that the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The Discrete Infinity Argument is a central pillar of generative grammar. It posits that every natural language is an infinite set of finite structures. The argument rests on the observation that natural languages allow patterns such as (I know that you know that)+ John snores. I will contend that the discrete infinity argument&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;is an assumption rather than an empirical truth (problem of induction, cognitive finitism),&lt;/li&gt;
&lt;li&gt;doesn’t establish the properties linguists want it to establish (in particular structural recursion),&lt;/li&gt;
&lt;li&gt;has become empirically less viable as linguistic machinery has become more abstract over the years (e.g. nanosyntax).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This does not entail, however, that the general methodology built on top of the Discrete Infinity Argument is bunk. Generative grammar has arrived at the right conclusion for the wrong reason. I will present an alternative argument that does not need contentious assumptions such as the competence-performance distinction to motivate the generative methodology.&lt;/p&gt;</content><category term="2024-Fall"></category></entry><entry><title>Gödel's theorems: an incomplete journey (10/18)</title><link href="https://complab-stonybrook.github.io/mlrg/news/2024-fall/godels-theorems-an-incomplete-journey-1018.html" rel="alternate"></link><published>2024-10-18T00:00:00-04:00</published><updated>2024-10-18T07:12:29-04:00</updated><author><name>Anton Hampe</name></author><id>tag:complab-stonybrook.github.io,2024-10-18:/mlrg/news/2024-fall/godels-theorems-an-incomplete-journey-1018.html</id><summary type="html">&lt;p&gt;Gary Mar and colleagues will present their project “A Year of Magical Thinking” that uses new media and AI to introduce students, as well as logicians, mathematicians, and linguists to the breadth and depth of Gödel’s Theorems. Gödel is widely regarded as the greatest logician of the 20th century …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Gary Mar and colleagues will present their project “A Year of Magical Thinking” that uses new media and AI to introduce students, as well as logicians, mathematicians, and linguists to the breadth and depth of Gödel’s Theorems. Gödel is widely regarded as the greatest logician of the 20th century and dreamed of establishing philosophical theses and ontological results with the rigour and precision of mathematics.  His dream was to a remarkable extent fulfilled. Despite their technical sophistication, Gödel’s logical theorems such as the Completeness Theorem [1930] and his Incompleteness Theorems [1931] have perennially managed to escape mere mathematics and shed light on larger philosophical issues. &lt;/p&gt;
&lt;p&gt;A number of popular accounts of Gödel’s Incompleteness Theorems misrepresent the scope of Gödel’s ideas and their mathematical and philosophical significance. This workshop explores ways of presenting Gödel’s Incompleteness theorems using modal provability logics. Modal principles characterize properties of proof, time, and God reveal logical interconnections among Gödel’s theorems and philosophical conclusions about the unreality of time in the General Theory of Relativity [1949-1952] and in his Ontologischer Beweis [*1970], a modal ontological argument. Gödel’s success has often been attributed to his philosophy of mathematics, but his success is as much a tribute to his “mathematics of philosophy”, i.e., his ability to formulate philosophical problems in a manner that made them amenable to mathematical methods.&lt;/p&gt;</content><category term="2024-Fall"></category></entry><entry><title>Kenneth on agreement on multiple tiers (10/11)</title><link href="https://complab-stonybrook.github.io/mlrg/news/2024-fall/kenneth-on-agreement-on-multiple-tiers-1011.html" rel="alternate"></link><published>2024-10-09T00:00:00-04:00</published><updated>2024-10-09T14:03:24-04:00</updated><author><name>Anton Hampe</name></author><id>tag:complab-stonybrook.github.io,2024-10-09:/mlrg/news/2024-fall/kenneth-on-agreement-on-multiple-tiers-1011.html</id><summary type="html">&lt;p&gt;This week &lt;a href="https://www.jeffreyheinz.net"&gt;Kenneth&lt;/a&gt; will be presenting his work on agreement on multiple tiers.&lt;/p&gt;
&lt;p&gt;Often, agreement targets the closest DP to some functional head which bears the right features.
But in some languages there are other hierarchies, such person/animacy, which outrank structural closeness.
Kenneth shows how such hierarchies can be …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This week &lt;a href="https://www.jeffreyheinz.net"&gt;Kenneth&lt;/a&gt; will be presenting his work on agreement on multiple tiers.&lt;/p&gt;
&lt;p&gt;Often, agreement targets the closest DP to some functional head which bears the right features.
But in some languages there are other hierarchies, such person/animacy, which outrank structural closeness.
Kenneth shows how such hierarchies can be implemented with a MTSL grammar over command strings.&lt;/p&gt;</content><category term="2024-Fall"></category></entry><entry><title>Sarah on generalizing BUFIA (10/04)</title><link href="https://complab-stonybrook.github.io/mlrg/news/2024-fall/sarah-on-generalizing-bufia-1004.html" rel="alternate"></link><published>2024-10-04T00:00:00-04:00</published><updated>2024-10-04T01:13:26-04:00</updated><author><name>Anton Hampe</name></author><id>tag:complab-stonybrook.github.io,2024-10-04:/mlrg/news/2024-fall/sarah-on-generalizing-bufia-1004.html</id><content type="html">&lt;p&gt;&lt;a href="https://github.com/heinz-jeffrey/bufia"&gt;BUFIA&lt;/a&gt;, the Bottom-Up Factor Inference Algorithm, is an algorithm for learning phonotactics.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://paynesa.github.io/"&gt;Sarah&lt;/a&gt; will be presenting work on generalizing BUFIA to learn positive and negative grammars from unconventional string models.&lt;/p&gt;</content><category term="2024-Fall"></category></entry></feed>